{"version":3,"sources":["webpack:///webpack/bootstrap 4bba0f2a322558862efb","webpack:///./src/models/Enums.ts","webpack:///external \"React\"","webpack:///./src/models/RandomRange.ts","webpack:///./src/models/Weapon.ts","webpack:///./src/models/Coordinate.ts","webpack:///./src/models/Entity.ts","webpack:///./src/components/RogueLike.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/gameComponents/BoardRow.tsx","webpack:///./src/components/gameComponents/GameLevel.tsx","webpack:///./src/components/gameComponents/PlayerStats.tsx","webpack:///./src/components/gameComponents/Tile.tsx","webpack:///./src/components/index.tsx","webpack:///./src/models/Cell.ts","webpack:///./src/models/Grid.ts","webpack:///./src/models/Hallway.ts","webpack:///./src/models/Room.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4bba0f2a322558862efb","export enum CellType \r\n{\r\n    Wall,\r\n    Ground,\r\n    Exit\r\n}\r\n\r\nexport enum GameObjectType \r\n{\r\n    Player,\r\n    Enemy,\r\n    Potion,\r\n    Weapon,\r\n    Empty\r\n}\r\n\r\nexport enum Direction\r\n{\r\n    North,\r\n    West,\r\n    South,\r\n    East\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Enums.ts","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","\r\n\r\nexport class RandomRange\r\n{\r\n    min: number;\r\n    max: number;\r\n\r\n    constructor(min: number, max: number)\r\n    {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n\r\n    random(): number\r\n    {\r\n        return Math.floor(Math.random() * (this.max - this.min + 1) + this.min);\r\n    }\r\n\r\n    randomFloat(): number\r\n    {\r\n        return Math.random() * (this.max - this.min) + this.min;\r\n    }\r\n\r\n    static getRangeInclusive(min: number, max: number)\r\n    {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    static getRangeExclusive(min: number, max: number)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/RandomRange.ts","import { IGameObject } from './IGameObject';\r\nimport { GameObjectType } from './Enums';\r\nimport { RandomRange } from './RandomRange';\r\n\r\nexport class Weapon implements IGameObject\r\n{\r\n    name: string;\r\n    attackRange: RandomRange;\r\n\r\n    readonly type: GameObjectType;\r\n\r\n    constructor(name: string, attackRange: RandomRange)\r\n    {\r\n        this.name = name;\r\n        this.attackRange = attackRange;\r\n        this.type = GameObjectType.Weapon;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Weapon.ts","export class Coordinate\r\n{\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Coordinate.ts","import { Weapon } from './Weapon';\r\nimport { GameObjectType } from './Enums';\r\nimport { IGameObject } from './IGameObject';\r\nimport { RandomRange } from './RandomRange';\r\nimport { Coordinate } from './Coordinate';\r\n\r\n//TODO: Clean up xPos and yPos and replace with Coordinate Object\r\n\r\nexport class Entity implements IGameObject\r\n{\r\n    isAlive: boolean;\r\n    pos: Coordinate;\r\n    health: number;\r\n    weapon: Weapon;\r\n    type: GameObjectType.Player | GameObjectType.Enemy;\r\n\r\n    constructor(x: number = 0, y: number = 0, \r\n                health = 100, weapon = new Weapon(\"Stick\", new RandomRange(1 , 3)),\r\n                type: GameObjectType.Player | GameObjectType.Enemy, modifier: number = 1)\r\n    {\r\n        this.pos = new Coordinate(x, y);\r\n        this.health = health * modifier;\r\n        this.weapon = weapon;\r\n        this.type = type;\r\n        this.isAlive = true;\r\n    }\r\n\r\n    attack(target: Entity)\r\n    {\r\n        if (target === this)\r\n        {\r\n            throw new Error(\"Cannot attack self!\");\r\n        }\r\n\r\n\r\n        target.takeDamage(this.weapon.attackRange.random());\r\n    }\r\n\r\n    private takeDamage(damage: number)\r\n    {\r\n        this.health = this.health - damage;\r\n        if (this.health <= 0)\r\n        {\r\n            this.isAlive = false;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Entity.ts","import * as React from 'react';\r\nimport { GameLevel } from './gameComponents/GameLevel';\r\nimport { Entity } from '../models/Entity';\r\nimport { RandomRange } from '../models/RandomRange';\r\nimport { GameObjectType } from '../models/Enums';\r\nimport { Weapon } from '../models/Weapon';\r\nimport { Potion } from '../models/Potion';\r\nimport { PlayerStats } from './gameComponents/PlayerStats';\r\n\r\nexport interface IRogueLikeState\r\n{\r\n    player: Entity\r\n}\r\n\r\nexport class RogueLike extends React.Component<undefined, IRogueLikeState>\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        let initPlayer: Entity = new Entity(0, 0, 100, new Weapon(\"Stick\", new RandomRange(5 , 10)), GameObjectType.Player, 1);\r\n\r\n        this.state = {\r\n            player: initPlayer\r\n        };\r\n    }\r\n\r\n    changePlayerPosition = (direction: string) => {\r\n\r\n        let playerDir: string = direction.toLowerCase();\r\n        let player: Entity = this.state.player;\r\n\r\n        if (playerDir === \"up\")\r\n        {\r\n            player.pos.y--;\r\n        }\r\n        else if (playerDir === \"left\")\r\n        {\r\n            player.pos.x--;\r\n        }\r\n        else if (playerDir === \"right\")\r\n        {\r\n            player.pos.x++;\r\n        }\r\n        else if (playerDir === \"down\")\r\n        {\r\n            player.pos.y++;\r\n        }\r\n        else\r\n        {\r\n            throw \"Player direction was not specified\";\r\n        }\r\n    }\r\n\r\n    startBattle = (enemy: Entity) => {\r\n        if (enemy === this.state.player)\r\n        {\r\n            throw new Error(\"Player cannot be passed into startBattle method in RogueLike Component\");\r\n        }\r\n        let player = this.state.player;\r\n\r\n        player.attack(enemy);\r\n        enemy.attack(player);\r\n\r\n        if (!player.isAlive)\r\n        {\r\n            //TODO: Show Game Over Screeen\r\n            console.log(\"GAME OVER\");\r\n        }\r\n\r\n        this.setState({\r\n            player: player\r\n        })\r\n    }\r\n\r\n    healPlayer = (potion: Potion) => {\r\n        let player = this.state.player;\r\n\r\n        player.health = player.health + potion.healAmount;\r\n\r\n        this.setState({\r\n            player: player\r\n        });\r\n    }\r\n\r\n    equipWeapon = (weapon: Weapon) => {\r\n        let player = this.state.player;\r\n\r\n        player.weapon = weapon;\r\n\r\n        this.setState({\r\n            player: player\r\n        });\r\n    }\r\n\r\n    spawnPlayer = (xPos: number, yPos: number) =>\r\n    {\r\n        let player = this.state.player;\r\n\r\n        player.pos.x = xPos;\r\n        player.pos.y = yPos;\r\n\r\n        this.setState({\r\n            player: player\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n               <PlayerStats player={this.state.player}/>\r\n               <GameLevel\r\n               spawnPlayer={this.spawnPlayer}\r\n               equipWeapon={this.equipWeapon}\r\n               healPlayer={this.healPlayer}\r\n               startBattle={this.startBattle} \r\n               changePlayerDirection={this.changePlayerPosition}\r\n               player={this.state.player}/>\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/RogueLike.tsx","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 7\n// module chunks = 0","import * as React from 'react';\r\n\r\nexport interface IBoardRowProps\r\n{\r\n    children?: any\r\n}\r\n\r\nexport function BoardRow(props: IBoardRowProps)\r\n{\r\n    return(\r\n        <tr>\r\n            {props.children}\r\n        </tr>\r\n    );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/BoardRow.tsx","import * as React from 'react';\r\nimport { Entity } from '../../models/Entity';\r\nimport { RandomRange } from '../../models/RandomRange';\r\nimport { GameObjectType } from '../../models/Enums';\r\nimport { IGameObject } from '../../models/IGameObject';\r\nimport { Weapon } from '../../models/Weapon';\r\nimport { Potion } from '../../models/Potion';\r\nimport { Grid } from '../../models/Grid';\r\nimport { Cell } from '../../models/Cell';\r\nimport { Coordinate } from '../../models/Coordinate';\r\nimport { CellType } from '../../models/Enums';\r\nimport { BoardRow } from './BoardRow';\r\nimport { Tile } from './Tile';\r\n\r\nexport interface IGameLevelState\r\n{\r\n    grid: Grid\r\n    levelNumber: number;\r\n}\r\n\r\nexport interface IGameLevelProps\r\n{\r\n    player: Entity;\r\n    changePlayerDirection(direction: string);\r\n    startBattle(enemy: Entity);\r\n    healPlayer(potion: Potion);\r\n    equipWeapon(weapon: Weapon);\r\n    spawnPlayer(xPos: number, yPos: number);\r\n}\r\n\r\nexport class GameLevel extends React.Component<IGameLevelProps, IGameLevelState>\r\n{\r\n\r\n    constructor(props: IGameLevelProps)\r\n    {\r\n        super(props);\r\n        let gridHeight: number = 50;\r\n        let gridWidth: number = 75;\r\n\r\n        let initGrid: Grid = new Grid(gridWidth, gridHeight);\r\n        initGrid.createLevel();\r\n\r\n        \r\n        /*********************************\r\n        **For Tests Only, Clear out ASAP**\r\n        **********************************/\r\n        let playerTile: CellType;\r\n        let position: Coordinate = null;\r\n\r\n        position = this.getRandomLocation(initGrid);\r\n\r\n        props.spawnPlayer(position.x, position.y);        \r\n\r\n        initGrid.cells[position.y][position.x].object = props.player;\r\n\r\n        let exitTile: CellType;\r\n        position = this.getRandomLocation(initGrid);\r\n\r\n        initGrid.cells[position.y][position.x].cellType = CellType.Exit;\r\n        this.spawnEnemies(new RandomRange(3, 5), new RandomRange(0.1, 0.3), initGrid);\r\n\r\n        /**End Here**/\r\n        \r\n\r\n        this.state = {\r\n            grid: initGrid,\r\n            levelNumber: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void\r\n    {        \r\n        document.addEventListener(\"keydown\", (event) => {            \r\n            if ((event.keyCode >= 37 && event.keyCode <= 40) || //arrow keys\r\n                event.keyCode === 65 || event.keyCode === 87 || // a and w keys\r\n                event.keyCode === 68 || event.keyCode === 83)   // d and s keys\r\n            {\r\n               this.movePlayer(event.keyCode);\r\n            }            \r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState): void\r\n    {\r\n        //If we updated the level, create a new one\r\n        if (this.state.levelNumber !== prevState.levelNumber)\r\n        {\r\n            this.createNewLevel();\r\n        }\r\n    }\r\n\r\n    getRandomLocation(grid: Grid): Coordinate\r\n    {\r\n        let randX: number = -1;\r\n        let randY: number = -1;\r\n        do\r\n        {\r\n            randX = RandomRange.getRangeExclusive(0, grid.cells[0].length);\r\n            randY = RandomRange.getRangeExclusive(0, grid.cells.length);\r\n        }\r\n        while(grid.cells[randY][randX].cellType === CellType.Wall ||\r\n              grid.cells[randY][randX].cellType === CellType.Exit)\r\n\r\n        return new Coordinate(randX, randY);\r\n    }\r\n\r\n    spawnEnemies(enemyRange: RandomRange, modifierRange: RandomRange, firstGrid?: Grid): void\r\n    {\r\n        let grid: Grid = firstGrid? firstGrid : this.state.grid;\r\n        const level = firstGrid? 0 : this.state.levelNumber;\r\n         \r\n        let enemies: number = enemyRange.random();\r\n\r\n        let enemy: Entity = null;\r\n        let position: Coordinate = null;\r\n        let attackRange: RandomRange = null;\r\n\r\n        if (level === 0) attackRange = new RandomRange(5, 10);\r\n        else if (level === 1) attackRange = new RandomRange(15, 20)\r\n        else if (level === 2) attackRange = new RandomRange(11, 14);\r\n        else if (level === 3) attackRange = new RandomRange(15, 25);\r\n        else if (level === 4) attackRange = new RandomRange(25, 35);\r\n\r\n        for (let i = 0; i < enemies; i++)\r\n        {\r\n            position = this.getRandomLocation(grid)\r\n            \r\n            enemy = new Entity(position.x, position.y, 100, new Weapon(\"Claw\", attackRange), GameObjectType.Enemy, modifierRange.randomFloat());\r\n            grid.cells[position.y][position.x].object = enemy;\r\n        }\r\n    }\r\n\r\n    spawnItems(potionHealthRange: RandomRange): void\r\n    {\r\n        //TODO: Finish this func\r\n        const level: number = this.state.levelNumber;\r\n        let weapon: Weapon = null;\r\n\r\n        if (level === 0) weapon = new Weapon(\"Sword\", new RandomRange(3, 25))\r\n        else if (level === 1) weapon = new Weapon(\"Axe\", new RandomRange(10, 35))\r\n        else if (level === 2) weapon = new Weapon(\"Mace\", new RandomRange(25, 40))\r\n        else if (level === 3) weapon = new Weapon(\"Claymore\", new RandomRange(40, 48))\r\n        else if (level === 4) weapon = new Weapon(\"Katana\", new RandomRange(55, 78))\r\n    }\r\n\r\n    //Checks if next cell exists (is not an index out of range) and tries to move it it\r\n    //If there are no collisions with walls or enemies, player is moved in the direction they pressed\r\n    movePlayer = (direction: number) => {\r\n        let player: Entity = this.props.player;\r\n        let grid: Grid = this.state.grid;\r\n           \r\n        //move left\r\n        if (direction === 37 || direction === 65)\r\n        {\r\n            if (!this.detectCollision(player.pos.y, player.pos.x - 1))\r\n            {\r\n                grid.cells[player.pos.y][player.pos.x].object = null;\r\n                grid.cells[player.pos.y][player.pos.x - 1].object = player;\r\n                this.props.changePlayerDirection(\"left\");\r\n            }\r\n            else\r\n            {\r\n                return;\r\n            }     \r\n        }\r\n        //move up\r\n        else if (direction === 38 || direction === 87)\r\n        {\r\n            if (!this.detectCollision(player.pos.y - 1, player.pos.x))\r\n            {\r\n                grid.cells[player.pos.y][player.pos.x].object = null;\r\n                grid.cells[player.pos.y - 1][player.pos.x].object = player;\r\n                this.props.changePlayerDirection(\"up\");\r\n            }\r\n            else\r\n            {                    \r\n                return;\r\n            }\r\n        }\r\n        //move right\r\n        else if (direction === 39 || direction === 68)\r\n        {            \r\n            if (!this.detectCollision(player.pos.y, player.pos.x + 1))\r\n            {\r\n                grid.cells[player.pos.y][player.pos.x].object = null;\r\n                grid.cells[player.pos.y][player.pos.x + 1].object = player;\r\n                this.props.changePlayerDirection(\"right\");\r\n            }\r\n            else\r\n            {\r\n                return;\r\n            }\r\n        }\r\n        //move down\r\n        else if (direction === 40 || direction === 83)\r\n        {\r\n            if (!this.detectCollision(player.pos.y + 1, player.pos.x))\r\n            {\r\n                grid.cells[player.pos.y][player.pos.x].object = null;\r\n                grid.cells[player.pos.y + 1][player.pos.x].object = player;\r\n                this.props.changePlayerDirection(\"down\");\r\n            }\r\n            else\r\n            {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            grid: grid\r\n        });\r\n    }\r\n    \r\n\r\n    componentWillUnmount(): void\r\n    {\r\n\r\n    }\r\n\r\n    detectCollision = (yNextPos: number, xNextPos: number) => {\r\n        let board = this.state.grid;\r\n\r\n        //check if we are going outside the bounds of the grid,\r\n        //if so just return\r\n         if (yNextPos > board.cells.length - 1 || yNextPos < 0 ||\r\n             xNextPos > board.cells[0].length - 1 ||  xNextPos < 0)\r\n        {\r\n            return true;\r\n        }\r\n        \r\n        //Make sure the next object in the next cell contains something\r\n        if (board.cells[yNextPos][xNextPos].object !== null)\r\n        {\r\n            //Collision with an Enemy\r\n            if (board.cells[yNextPos][xNextPos].object.type === GameObjectType.Enemy)\r\n            {;\r\n                let enemy: Entity = board.cells[yNextPos][xNextPos].object as Entity;\r\n\r\n                //Player and enemy battle when they collide!\r\n                this.props.startBattle(enemy);\r\n\r\n                //If enemy is dead after battle, set it to null and update the board\r\n                if (!enemy.isAlive)\r\n                {                               \r\n                    enemy = null;\r\n\r\n                    this.setState({\r\n                        grid: board\r\n                    });\r\n\r\n                    return false;               \r\n                }\r\n                return true;\r\n            }\r\n            //Collision with a potion\r\n            else if (board.cells[yNextPos][xNextPos].object.type === GameObjectType.Potion)\r\n            {\r\n                let potion: Potion = board.cells[yNextPos][xNextPos].object as Potion;\r\n                this.props.healPlayer(potion);\r\n\r\n                //Dispose of the potion after it is used\r\n\r\n                potion = null;\r\n\r\n                this.setState({\r\n                    grid: board\r\n                });\r\n\r\n                return false;\r\n\r\n            }\r\n            //Collision with a weapon\r\n            else if (board.cells[yNextPos][xNextPos].object.type === GameObjectType.Weapon)\r\n            {\r\n                let weapon: Weapon = board.cells[yNextPos][xNextPos].object as Weapon;\r\n\r\n                this.props.equipWeapon(weapon);\r\n\r\n                //Dispose of the weapon on the grid after it is picked up\r\n                weapon = null;\r\n\r\n                this.setState({\r\n                    grid: board\r\n                });\r\n            }\r\n        }\r\n        //Check if we are colliding with an exit\r\n        else if (board.cells[yNextPos][xNextPos].cellType === CellType.Exit)\r\n        {\r\n            //start new level\r\n            this.setState({\r\n                    levelNumber: this.state.levelNumber + 1\r\n                });\r\n        }\r\n        //Otherwise, check if it is a wall\r\n        else if (board.cells[yNextPos][xNextPos].cellType === CellType.Wall)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    createNewLevel = () => {\r\n        let grid: Grid = this.state.grid;\r\n        let level: number = this.state.levelNumber;\r\n\r\n        grid.createLevel();\r\n\r\n        //Populate the level\r\n        switch (level)\r\n        {\r\n            case 1:\r\n            this.spawnEnemies(new RandomRange(3, 5), new RandomRange(0.1, 0.3));\r\n\r\n            break;            \r\n            case 2:\r\n\r\n            this.spawnEnemies(new RandomRange(5, 10), new RandomRange(0.3, 0.42));\r\n            break;\r\n            case 3:\r\n\r\n            this.spawnEnemies(new RandomRange(11, 15), new RandomRange(0.42, 0.55));\r\n            break;\r\n            case 4:\r\n\r\n            this.spawnEnemies(new RandomRange(15, 16), new RandomRange(0.55, 0.75));\r\n            break;\r\n        }        \r\n\r\n        this.setState({\r\n            grid: grid\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element\r\n    {\r\n        let keyCounter: number = 0;\r\n        return(\r\n            <div className=\"grid-wrapper\">\r\n                <table className=\"grid\">\r\n                    <tbody>\r\n                        {\r\n                            this.state.grid.cells.map(row => <BoardRow>{row.map(cell => <Tile cell={cell} key={keyCounter++}></Tile>)}</BoardRow>)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>            \r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/GameLevel.tsx","import * as React from 'react';\r\nimport { Entity } from '../../models/Entity';\r\n\r\nexport interface IPlayerStatsProps\r\n{\r\n    player: Entity;\r\n}\r\n\r\nexport function PlayerStats(props: IPlayerStatsProps)\r\n{\r\n    return(\r\n        <ul className=\"stats\">\r\n            <li>Health: {props.player.health}</li>\r\n            <li>Weapon: {props.player.weapon.name}</li>\r\n            <li>Attack Range: {props.player.weapon.attackRange.min} - {props.player.weapon.attackRange.max}</li>\r\n            <li>Level: #</li>\r\n            <li>Next Level: # XP</li>\r\n            <li>Dungeon Level: #</li>\r\n        </ul>\r\n    );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/PlayerStats.tsx","import * as React from 'react';\r\nimport { Cell } from '../../models/Cell';\r\nimport { CellType } from '../../models/Enums';\r\nimport { GameObjectType } from '../../models/Enums';\r\n\r\nexport interface ITileProps\r\n{\r\n    cell: Cell\r\n}\r\n\r\n\r\nexport function Tile(props: ITileProps)\r\n{\r\n    if (props.cell.object)\r\n    {\r\n        //Render Player\r\n        if (props.cell.object.type === GameObjectType.Player)\r\n        {\r\n            return (<td className=\"player\"/>);\r\n        }\r\n        //Render Enemy\r\n        else if (props.cell.object.type === GameObjectType.Enemy)\r\n        {\r\n            return (<td className=\"enemy\"/>);\r\n        }\r\n        //Render Potion\r\n        else if (props.cell.object.type === GameObjectType.Potion)\r\n        {\r\n            return (<td className=\"potion\"/>);\r\n        }\r\n        //Render Weapon\r\n        else if (props.cell.object.type === GameObjectType.Weapon)\r\n        {\r\n            return (<td className=\"weapon\"/>);\r\n        }\r\n    }\r\n    //Render Exit Door\r\n    else if (props.cell.cellType === CellType.Exit)\r\n    {\r\n        return (<td className=\"exit-door\" />)\r\n    }\r\n    //Render Wall\r\n    else if (props.cell.cellType === CellType.Wall)\r\n    {\r\n        return (<td className=\"wall\"/>);\r\n    }\r\n\r\n    //Render blank cell\r\n    return(\r\n        <td />\r\n    );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/gameComponents/Tile.tsx","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { RogueLike } from './RogueLike';\r\n\r\n\r\nReactDOM.render(<RogueLike />, document.getElementById(\"app\"));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.tsx","import { IGameObject } from './IGameObject';\r\nimport { GameObjectType } from './Enums';\r\nimport { CellType } from './Enums';\r\n\r\n\r\nexport class Cell\r\n{\r\n    //The object that sits on top of the current instance of cell\r\n    //Is set to null if cell does not contain any objects on it\r\n    object: IGameObject;\r\n    cellType: CellType;\r\n\r\n    constructor(object: IGameObject = null, cellType: CellType = CellType.Wall)\r\n    {\r\n        this.object = object;\r\n        this.cellType = cellType;\r\n    }\r\n\r\n    resetToDefaultValues()\r\n    {\r\n        this.object = null;\r\n        this.cellType = CellType.Wall;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Cell.ts","import { Cell } from './Cell';\r\nimport { CellType } from './Enums';\r\nimport { Direction } from './Enums';\r\nimport { Entity } from './Entity';\r\nimport { Weapon } from './Weapon';\r\nimport { Potion } from './Potion';\r\nimport { Room } from './Room';\r\nimport { Hallway } from './Hallway';\r\nimport { RandomRange } from './RandomRange'; \r\n\r\n//TODO: Perhaps have this object take care of generating enemies, weapons, potion, and level layout?\r\nexport class Grid\r\n{\r\n    cells: Array<Array<Cell>>;\r\n    private rooms: Array<Room>;\r\n\r\n    private roomSize: RandomRange;\r\n    private hallwaySize: RandomRange;\r\n\r\n    private numberOfRooms: RandomRange;\r\n\r\n    constructor(width: number, height: number)\r\n    {\r\n        let newBoard: Array<Array<Cell>> = [];\r\n\r\n        for (let r = 0; r < height; r++)\r\n        {\r\n            let row: Array<Cell> = [];\r\n\r\n            for (let c = 0; c < width; c++)\r\n            {\r\n                row.push(new Cell());\r\n            }\r\n\r\n            newBoard.push(row);\r\n        }\r\n\r\n        this.cells =  newBoard;\r\n\r\n        this.roomSize = new RandomRange(4, 9);\r\n        this.hallwaySize = new RandomRange(3, 5);\r\n        this.numberOfRooms = new RandomRange(30, 40);\r\n    }\r\n\r\n    private resetGrid()\r\n    {\r\n        for(let r = 0; r < this.cells.length; r++)\r\n        {\r\n            for (let c = 0; c < this.cells[r].length; c++)\r\n            {\r\n                this.cells[r][c].resetToDefaultValues();\r\n            }\r\n        }        \r\n    }\r\n\r\n    createLevel()\r\n    {\r\n        this.resetGrid();\r\n        this.drawGrid()\r\n    }\r\n\r\n    private drawGrid()\r\n    {\r\n        let numberOfRooms: number = this.numberOfRooms.random();\r\n\r\n        let randRow: number = -1;\r\n        let randCol: number = -1;\r\n        let room: Room = null;\r\n        let nextRoom: Room = null;\r\n        let hallway: Hallway = null;\r\n        let randDir: Direction = RandomRange.getRangeInclusive(0, 3);\r\n\r\n        //Pick a random spot on the grid for the first room\r\n        do\r\n        {\r\n            randRow = Math.floor(Math.random() * this.cells.length);\r\n            randCol = Math.floor(Math.random() * this.cells[0].length);\r\n            room = new Room(this.roomSize, this.roomSize, randCol, randRow);\r\n        } \r\n        while((room.pos.x + room.width) > this.cells[0].length - 1 ||\r\n            (room.pos.y + room.height) > this.cells.length - 1)\r\n\r\n        //create rooms\r\n        for (let i = 0; i < numberOfRooms; i++)\r\n        {\r\n            //get a random direction for the hallawy\r\n            randDir = RandomRange.getRangeInclusive(0, 3);\r\n\r\n            room.draw(this);\r\n\r\n            hallway = new Hallway(this.hallwaySize, room.pos.x, room.pos.y, randDir);\r\n\r\n            hallway.draw(this, room);            \r\n            \r\n            room = new Room(this.roomSize, this.roomSize, hallway.endPos.x, hallway.endPos.y);\r\n\r\n            //Make sure that if we are headed north or west we offset the room\r\n            //starting position by its width/height so that it doesnt overlap\r\n            //the newly drawn hallway that leads to it\r\n            if (hallway.direction === Direction.North)\r\n                room.pos.y -= (room.height - 1);\r\n                \r\n            else if (hallway.direction === Direction.West)\r\n                room.pos.x -= (room.width - 1);\r\n\r\n            //ensure room start does not go out of bounds of the grid,\r\n            //if so just set to zero\r\n            room.pos.x < 0 ? room.pos.x = 0 : null;\r\n            room.pos.y < 0 ? room.pos.y = 0 : null;\r\n                \r\n        }\r\n\r\n        //draw last room so that we dont end with a hallway\r\n         room.draw(this);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Grid.ts","import { RandomRange } from './RandomRange'; \r\nimport { Direction } from './Enums';\r\nimport { CellType } from './Enums';\r\nimport { Grid } from './Grid';\r\nimport { Room } from './Room';\r\nimport { Coordinate } from './Coordinate';\r\n\r\n//TODO: Clean up pos.x and pos.y and replace with Coordinate Object\r\n\r\nexport class Hallway\r\n{\r\n    length: number\r\n\r\n    pos: Coordinate;\r\n\r\n    endPos: Coordinate;\r\n\r\n    direction: Direction;\r\n\r\n    constructor(lengthRange: RandomRange, xPos: number, yPos: number, direction: Direction)\r\n    {\r\n        let hallwayLength: number = lengthRange.random();\r\n        this.length = hallwayLength;\r\n\r\n        this.pos = new Coordinate(xPos, yPos);\r\n\r\n        //default values, will be set later when hallway is drawn\r\n        this.endPos = new Coordinate(0, 0);\r\n\r\n        this.direction = direction;\r\n    }\r\n\r\n    draw(grid: Grid, room: Room)\r\n    {\r\n        let xCoord = -1;\r\n        let yCoord = -1;\r\n\r\n        //change direction if hallway is going to go outside the bounds of the grid\r\n        if (this.checkBoundaryCollision(room, this.direction, grid))\r\n        {\r\n            this.direction = (this.direction + 2) % 4;\r\n        }\r\n        \r\n\r\n        switch (this.direction)\r\n        {\r\n            case Direction.North:\r\n\r\n                //Find the offset of the hallway\r\n                 this.pos.x = this.offSetCoord(this.pos.x, room.width);\r\n\r\n                //draw the hallway\r\n                yCoord = this.pos.y;\r\n                for(let i = 0; i < this.length; i++)\r\n                {\r\n                    grid.cells[yCoord][this.pos.x].cellType = CellType.Ground;\r\n                    yCoord--;\r\n                }\r\n\r\n                //set end position for new room to be made\r\n                this.endPos.x = this.pos.x;\r\n                this.endPos.y = yCoord;\r\n\r\n                break;\r\n            case Direction.East:\r\n\r\n                this.pos.x += room.width;\r\n                this.pos.y = this.offSetCoord(this.pos.y, room.height);\r\n\r\n                xCoord = this.pos.x;\r\n                for (let i = 0; i < this.length; i++)\r\n                {\r\n                    grid.cells[this.pos.y][xCoord].cellType = CellType.Ground;\r\n                    xCoord++;\r\n                }\r\n\r\n                this.endPos.x = xCoord;\r\n                this.endPos.y = this.pos.y\r\n\r\n                break;\r\n            case Direction.West:\r\n\r\n                this.pos.y = this.offSetCoord(this.pos.y, room.height);\r\n\r\n                xCoord = this.pos.x;\r\n                for(let i = 0; i < this.length; i++)\r\n                {\r\n                    grid.cells[this.pos.y][xCoord].cellType = CellType.Ground;\r\n                    xCoord--;                    \r\n                }\r\n\r\n                this.endPos.x = xCoord;\r\n                this.endPos.y = this.pos.y;\r\n\r\n                break;\r\n            case Direction.South:\r\n\r\n                this.pos.x = this.offSetCoord(this.pos.x, room.width);\r\n                this.pos.y += room.height;\r\n\r\n                yCoord = this.pos.y;\r\n                for (let i = 0; i < this.length; i++)\r\n                {\r\n                    grid.cells[yCoord][this.pos.x].cellType = CellType.Ground;\r\n                    yCoord++;\r\n                }\r\n\r\n                this.endPos.x = this.pos.x;\r\n                this.endPos.y = yCoord;\r\n\r\n                break; \r\n        }\r\n    }\r\n\r\n    checkBoundaryCollision(room: Room, direction: Direction, grid: Grid): boolean\r\n    {\r\n        console.log(\"Direction: \", direction);\r\n        console.log(\"Hallway: \", this);\r\n\r\n        switch(direction)\r\n        {\r\n            case Direction.North:\r\n\r\n                if ((this.pos.y - this.length) < 0)\r\n                    return true;                 \r\n                    \r\n\r\n                break;\r\n            case Direction.East:\r\n\r\n                //we must account for the room width here as well\r\n                if (((this.pos.x + room.width) + this.length) > grid.cells.length - 1)\r\n                    return true;\r\n                    \r\n\r\n                break;\r\n            case Direction.West:\r\n\r\n                if ((this.pos.x - this.length)< 0)\r\n                    return true;\r\n                    \r\n\r\n                break;\r\n            case Direction.South:\r\n\r\n                if (((this.pos.y + room.height) + this.length) > grid.cells.length - 1)\r\n                    return true;\r\n                   \r\n                break;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    offSetCoord(coord: number, maxOffset: number): number\r\n    {\r\n        return RandomRange.getRangeExclusive(coord, coord + maxOffset);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Hallway.ts","import { RandomRange } from './RandomRange';\r\nimport { CellType } from './Enums';\r\nimport { Grid } from './Grid';\r\nimport  { Coordinate } from './Coordinate';\r\n\r\n//TODO: Clean up xPos and yPos and replace with Coordinate Object\r\n\r\nexport class Room\r\n{\r\n    height: number;\r\n    width: number;\r\n\r\n    //x and y position of room is top left corner of room\r\n    pos: Coordinate;\r\n\r\n    constructor(heightRange: RandomRange, widthRange: RandomRange, xPos: number, yPos: number)\r\n    {\r\n        let roomHeight: number = heightRange.random();\r\n        let roomWidth: number = heightRange.random();\r\n\r\n        this.height = roomHeight;\r\n        this.width = roomWidth;\r\n        \r\n        this.pos = new Coordinate(xPos, yPos);\r\n    }\r\n\r\n    draw(grid: Grid)\r\n    {\r\n        let xOffset: number = this.pos.x + this.width;\r\n        let yOffset: number = this.pos.y + this.height;\r\n        let gridFirstDimension: number = grid.cells[0].length - 1;\r\n        let gridSecondDimension: number = grid.cells.length - 1;\r\n        \r\n        //If room is going to go outside the bounds of the grid,\r\n        //offset the start position by the how many cells it is overflowing so that\r\n        //grid does not go out of bounds\r\n        if (xOffset > gridFirstDimension)\r\n        {\r\n            let overflow = xOffset - (gridFirstDimension);\r\n            this.pos.x -= overflow;\r\n        }\r\n        \r\n        if (yOffset > gridSecondDimension)\r\n        {\r\n            let overflow = yOffset - (gridSecondDimension);\r\n            this.pos.y -= overflow;\r\n        }\r\n\r\n\r\n\r\n        for (let j = 0; j < this.height; j++)\r\n        {\r\n            let yCoord: number = this.pos.y + j;\r\n\r\n            for (let z = 0; z < this.width; z++)\r\n            {\r\n                let xCoord: number = this.pos.x + z;\r\n\r\n                grid.cells[yCoord][xCoord].cellType = CellType.Ground;\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Room.ts"],"sourceRoot":""}